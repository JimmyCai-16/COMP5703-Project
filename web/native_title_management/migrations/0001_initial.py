# Generated by Django 4.1.5 on 2024-08-26 14:39

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LandSubjectToNativeTitleIndicationOnly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='NativeTitleApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tribunal_number', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=256)),
                ('federal_court_number', models.CharField(max_length=64, unique=True)),
                ('date_lodged', models.DateField()),
                ('status', models.PositiveSmallIntegerField(choices=[(0, ''), (1, ''), (2, ''), (3, '')])),
                ('date_status', models.DateField()),
                ('registered_status', models.CharField(max_length=64)),
                ('date_registered', models.DateField()),
                ('date_registered_decision', models.DateField()),
                ('date_entri', models.DateField()),
                ('date_notncl', models.DateField(blank=True, null=True)),
                ('date_fcord', models.DateField(blank=True, null=True)),
                ('combined', models.BooleanField(blank=True, choices=[(False, 'N'), (True, 'Y')], default=False, null=True)),
                ('parent_no', models.CharField(blank=True, max_length=64, null=True)),
                ('representative', models.CharField(blank=True, max_length=64, null=True)),
                ('application_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Claimant'), (1, 'Non-Claimant'), (2, 'Compensation'), (3, 'Revised Determination')], null=True)),
                ('data_source', models.CharField(max_length=64)),
                ('date_curr', models.DateField()),
                ('sea_claim', models.BooleanField(choices=[(False, 'N'), (True, 'Y')], default=False)),
                ('zone_lwm', models.BooleanField(choices=[(False, 'N'), (True, 'Y')], default=False)),
                ('zone_3nm', models.BooleanField(choices=[(False, 'N'), (True, 'Y')], default=False)),
                ('zone_12nm', models.BooleanField(choices=[(False, 'N'), (True, 'Y')], default=False)),
                ('zone_24nm', models.BooleanField(choices=[(False, 'N'), (True, 'Y')], default=False)),
                ('zone_eez', models.BooleanField(choices=[(False, 'N'), (True, 'Y')], default=False)),
                ('NNTT_seq_no', models.CharField(max_length=64, unique=True)),
                ('sptial_note', models.CharField(max_length=64, unique=True)),
                ('jurisdiction', models.CharField(choices=[('QLD', 'Queensland'), ('NSW', 'New South Wales'), ('VIC', 'Victoria'), ('SA', 'South Australia'), ('WA', 'Western Australia'), ('NT', 'Northern Territory'), ('TAS', 'Tasmania'), ('ACT', 'Australian Capital Territory')], max_length=3)),
                ('overlap', models.CharField(blank=True, max_length=64, null=True)),
                ('date_extracted', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='NativeTitleClaimApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tribunal_number', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=256)),
                ('federal_court_number', models.CharField(max_length=100)),
                ('date_lodged', models.DateField(blank=True, null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Active')])),
                ('sub_status', models.PositiveSmallIntegerField(choices=[(0, 'Accepted for registration'), (1, 'Accepted for registration (new decision in progress - s 190A)'), (2, 'Currently identified for Reg. Decision (new decision in progress - s 190A)'), (3, 'Currently identified for Reg. Decision (new decision in progress - s 190E reconsideration)'), (4, 'Not Accepted for registration'), (5, 'Not currently identified for Reg. Decision'), (6, 'Not currently identified for Reg. Decision (new decision in progress - s 190A)')])),
                ('date_status_effective', models.DateField(blank=True, null=True)),
                ('representative', models.CharField(blank=True, max_length=512, null=True)),
                ('date_registered', models.DateField(blank=True, null=True, verbose_name='Date current reg')),
                ('jurisdiction', models.CharField(choices=[('QLD', 'Queensland'), ('NSW', 'New South Wales'), ('VIC', 'Victoria'), ('SA', 'South Australia'), ('WA', 'Western Australia'), ('NT', 'Northern Territory'), ('TAS', 'Tasmania'), ('ACT', 'Australian Capital Territory')], max_length=3)),
                ('overlap', models.CharField(blank=True, choices=[('QLD', 'Queensland'), ('NSW', 'New South Wales'), ('VIC', 'Victoria'), ('SA', 'South Australia'), ('WA', 'Western Australia'), ('NT', 'Northern Territory'), ('TAS', 'Tasmania'), ('ACT', 'Australian Capital Territory')], max_length=3, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='NativeTitleDetermination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tribunal_number', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=256)),
                ('federal_court_number', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=list, size=None)),
                ('federal_court_name', models.CharField(blank=True, max_length=512, null=True)),
                ('linked_file_no', models.CharField(blank=True, max_length=1024, null=True)),
                ('date_determined', models.DateField(blank=True, null=True)),
                ('date_registered', models.DateField(blank=True, null=True)),
                ('method', models.PositiveSmallIntegerField(choices=[(0, 'Consent'), (1, 'Litigated'), (2, 'Unopposed')])),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'In effect - Finalised'), (1, 'In effect - Not Finalised'), (2, 'Conditional - Full'), (3, 'Conditional - Part')])),
                ('outcome', models.PositiveSmallIntegerField(choices=[(0, 'Native title does not exist'), (1, 'Native title exists (exclusive)'), (2, 'Native title exists (non-exclusive)'), (3, 'Native title extinguished'), (4, 'Native title exists in parts of the determination area'), (5, 'Native title exists in the entire determination area'), (6, 'Compensation is payable')])),
                ('claimant_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Claimant'), (1, 'Non-Claimant'), (2, 'Compensation'), (3, 'Revised Determination')], null=True)),
                ('RNTBC_name', models.CharField(blank=True, max_length=512, null=True)),
                ('related_NTDA', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=list, size=None)),
                ('date_currency', models.DateField(blank=True, null=True)),
                ('NNTT_seq_no', models.CharField(blank=True, max_length=64, null=True)),
                ('jurisdiction', models.CharField(choices=[('QLD', 'Queensland'), ('NSW', 'New South Wales'), ('VIC', 'Victoria'), ('SA', 'South Australia'), ('WA', 'Western Australia'), ('NT', 'Northern Territory'), ('TAS', 'Tasmania'), ('ACT', 'Australian Capital Territory')], max_length=3)),
                ('overlap', models.CharField(blank=True, max_length=64, null=True)),
                ('date_extracted', models.DateField(blank=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
            ],
        ),
    ]
